{"ast":null,"code":"var _jsxFileName = \"/home/yoga-anand/dev/psp/react/react_/usestates/new_project/src/Fun.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Fun() {\n  _s();\n  let [data, setData] = useState(\"deepa\");\n  // console.log(data[1]);\n  function changeName() {\n    // data[0] = \"deepanjali\";\n    // document.querySelector(\"h1\").innerHTML = data[0];\n    setData(\"hello\");\n    document.querySelector(\"h1\").innerHTML = data[0];\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeName,\n      children: \"change name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Fun, \"vF3p6rdZDn63QCBHxtkFVzr8k88=\");\n_c = Fun;\nexport default Fun;\nvar _c;\n$RefreshReg$(_c, \"Fun\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Fun","_s","data","setData","changeName","document","querySelector","innerHTML","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/yoga-anand/dev/psp/react/react_/usestates/new_project/src/Fun.jsx"],"sourcesContent":["  import React, { useState } from \"react\";\n\n  function Fun() {\n    let [data, setData] = useState(\"deepa\");\n    // console.log(data[1]);\n    function changeName() {\n      // data[0] = \"deepanjali\";\n      // document.querySelector(\"h1\").innerHTML = data[0];\n      setData(\"hello\");\n      document.querySelector(\"h1\").innerHTML = data[0];\n    }\n\n    return (\n      <>\n        <h1>{data[0]}</h1>\n        <button onClick={changeName}>change name</button>\n      </>\n    );\n  }\n\n  export default Fun;\n"],"mappings":";;AAAE,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACvC;EACA,SAASS,UAAUA,CAAA,EAAG;IACpB;IACA;IACAD,OAAO,CAAC,OAAO,CAAC;IAChBE,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC,CAACC,SAAS,GAAGL,IAAI,CAAC,CAAC,CAAC;EAClD;EAEA,oBACEL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKN,IAAI,CAAC,CAAC;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBf,OAAA;MAAQgB,OAAO,EAAET,UAAW;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACjD,CAAC;AAEP;AAACX,EAAA,CAhBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}